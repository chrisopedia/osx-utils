#!/usr/bin/env bash
#
# Author:
#   Newton (@chrisopedia)
#
# Description:
#   Print out image dimensions
#
# Dependencies:
#   None
#
# Configuration:
#   @param   file    required
#
# Usage:
#   `image foo.jpg`

_image() {
	local filename=$(basename "$1")
	local extension="${filename##*.}"
	local usage="$(basename "$0"): usage: $(basename "$0") [-H|--height] [-w|--width] $(tput smul)file$(tput rmul)"

	# Test for known flags
	for opt in $@
	do
		case $opt in
			-h|--help)
				printf '%s\n' "$usage"
				exit 2
				;;
			-H|--height) height=true ;;
			-w|--width) width=true ;;
			-*|--*) 
				printf '%sbash: %s: %s: invalid option\n' "-" "$(basename "$0")" "$opt" >&2
				printf '%s\n' "$usage"
				exit 1
				;;
		esac
	done

	if [ $# -eq 0 ]; then
		printf 'bash: %s: No file found\n' "$(basename "$0")" >&2
		printf '%s\n' "$usage"
		exit 1
	fi

	if [[ $extension != 'jpg' || $extension != 'jpeg' || $extension != 'png' || $extension != 'webp' || $extension != 'gif' || $extension != 'bmp' ]]; then
		printf 'bash: %s: %s: Invalid file extension\n' "$(basename "$0")" "$extension" >&2
		exit 1
	fi

	if [[ ! -f $1 ]]; then
		printf 'bash: %s: No file found\n' "$(basename "$0")" >&2
		exit 1
	fi

	if [[ $height ]]; then
		echo "Image Height:" $(sips -g pixelHeight $1 | grep -oE "[[:digit:]]{1,}$")"px"
	elif [[ $width ]]; then
		echo "Image Width:" $(sips -g pixelWidth $1 | grep -oE "[[:digit:]]{1,}$")"px"
	else
		echo -e "Image Width:" $(sips -g pixelWidth $1 | grep -oE "[[:digit:]]{1,}$")"px"
		echo "Image Height:" $(sips -g pixelHeight $1 | grep -oE "[[:digit:]]{1,}$")"px"
	fi
}

_image "$@"
